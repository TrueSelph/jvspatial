# =============================================================================
# jvspatial Environment Configuration Template
# =============================================================================
# Copy this file to .env and customize the values for your environment
#
# Usage:
#   1. Copy: cp .env.example .env
#   2. Edit the .env file with your specific configuration
#   3. Load in your application: python-dotenv or similar
#
# =============================================================================

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Choose the database backend for jvspatial persistence

# Database Type Selection
# Options: 'json', 'mongodb'
# Default: 'json' (if not specified)
JVSPATIAL_DB_TYPE=json

# -----------------------------------------------------------------------------
# JSON DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Used when JVSPATIAL_DB_TYPE=json (default backend)

# Base path for JSON database files
# The library will create subdirectories for different collections
# Relative paths are relative to your application's working directory
# Examples:
#   - ./data/jvdb (relative path)
#   - /var/lib/jvspatial/db (absolute path)
#   - ~/jvspatial_data (home directory)
JVSPATIAL_JSONDB_PATH=./jvdb

# -----------------------------------------------------------------------------
# MONGODB CONFIGURATION
# -----------------------------------------------------------------------------
# Used when JVSPATIAL_DB_TYPE=mongodb

# MongoDB Connection URI
# Format: mongodb://[username:password@]host[:port][/database][?options]
# Examples:
#   - mongodb://localhost:27017 (local, no auth)
#   - mongodb://user:pass@localhost:27017 (local with auth)
#   - mongodb+srv://user:pass@cluster.mongodb.net/ (MongoDB Atlas)
#   - mongodb://mongo1,mongo2,mongo3:27017/?replicaSet=rs0 (replica set)
JVSPATIAL_MONGODB_URI=mongodb://localhost:27017

# MongoDB Database Name
# The database within MongoDB instance to use for jvspatial data
# Will be created automatically if it doesn't exist
JVSPATIAL_MONGODB_DB_NAME=jvspatial_db

# -----------------------------------------------------------------------------
# ENVIRONMENT-SPECIFIC EXAMPLES
# -----------------------------------------------------------------------------

# DEVELOPMENT ENVIRONMENT
# Uncomment and modify for development setup:
# JVSPATIAL_DB_TYPE=json
# JVSPATIAL_JSONDB_PATH=./dev_data

# TESTING ENVIRONMENT
# Uncomment and modify for testing setup:
# JVSPATIAL_DB_TYPE=json
# JVSPATIAL_JSONDB_PATH=./test_data

# PRODUCTION ENVIRONMENT (MongoDB)
# Uncomment and modify for production setup:
# JVSPATIAL_DB_TYPE=mongodb
# JVSPATIAL_MONGODB_URI=mongodb+srv://production_user:secure_password@production-cluster.mongodb.net/
# JVSPATIAL_MONGODB_DB_NAME=jvspatial_production

# DOCKER ENVIRONMENT
# Uncomment and modify for Docker/containerized setup:
# JVSPATIAL_DB_TYPE=mongodb
# JVSPATIAL_MONGODB_URI=mongodb://mongo_container:27017
# JVSPATIAL_MONGODB_DB_NAME=jvspatial_docker

# -----------------------------------------------------------------------------
# SECURITY NOTES
# -----------------------------------------------------------------------------
#
# 1. Never commit .env files with real credentials to version control
# 2. Use strong passwords for MongoDB authentication
# 3. Restrict MongoDB network access in production
# 4. Use MongoDB Atlas or properly secured self-hosted instances
# 5. Consider using secrets management in production (AWS Secrets Manager, etc.)
#
# -----------------------------------------------------------------------------
